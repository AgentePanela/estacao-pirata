using Content.Client.Message;
using Content.Shared.MassMedia.Systems;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using System.Globalization;
using Robust.Shared.Configuration;
using Robust.Shared.Timing;
using Robust.Shared.Utility;

namespace Content.Client._EstacaoPirata.CartridgeLoader.Cartridges;

[GenerateTypedNameReferences]
public sealed partial class MessengerUiFragment : BoxContainer
{
    /*public event Action? OnNextButtonPressed;
    public event Action? OnPrevButtonPressed;*/

    public event Action? OnNotificationSwithPressed;

    public MessengerUiFragment()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        //Input.Placeholder = new Rope.Leaf(_loc.GetString("comms-console-menu-announcement-placeholder"));

        /*NotificationSwitch.OnPressed += _ => OnNotificationSwithPressed?.Invoke();
        NotificationSwitch.Text = Loc.GetString(notificationOn ? "news-read-ui-notification-on" : "news-read-ui-notification-off");*/

        /*Next.OnPressed += _ => OnNextButtonPressed?.Invoke();
        Prev.OnPressed += _ => OnPrevButtonPressed?.Invoke();
        */
    }
    /*

    public void UpdateState(NewsArticle article, int targetNum, int totalNum, bool notificationOn)
    {
        PageNum.Visible = true;
        PageText.Visible = true;
        ShareTime.Visible = true;
        Author.Visible = true;

        PageName.Text = article.Title;
        PageText.SetMarkup(article.Content);

        PageNum.Text = $"{targetNum}/{totalNum}";

        NotificationSwitch.Text = Loc.GetString(notificationOn ? "news-read-ui-notification-on" : "news-read-ui-notification-off");

        string shareTime = article.ShareTime.ToString(@"hh\:mm\:ss");
        ShareTime.SetMarkup(Loc.GetString("news-read-ui-time-prefix-text") + " " + shareTime);

        Author.SetMarkup(Loc.GetString("news-read-ui-author-prefix") + " " + (article.Author != null ? article.Author : Loc.GetString("news-read-ui-no-author")));

        Prev.Disabled = targetNum <= 1;
        Next.Disabled = targetNum >= totalNum;
    }

    
    public void UpdateEmptyState(bool notificationOn)
    {
        Author.Visible = false;
        NotificationSwitch.Text = Loc.GetString(notificationOn ? "news-read-ui-notification-on" : "news-read-ui-notification-off");
    }*/
}